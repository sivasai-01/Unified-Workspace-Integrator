{"ast":null,"code":"var _jsxFileName = \"D:\\\\Telegram Desktop\\\\automations_technical_assessment\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\data-form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpointMapping = {\n  'Notion': 'notion',\n  'Airtable': 'airtable',\n  'HubSpot': 'hubspot'\n};\nexport const DataForm = ({\n  integrationType,\n  credentials\n}) => {\n  _s();\n  const [loadedData, setLoadedData] = useState(null);\n  const [stretched, setStretched] = useState(false);\n  const endpoint = endpointMapping[integrationType];\n  const handleLoad = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('credentials', JSON.stringify(credentials));\n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n      const data = response.data;\n      setLoadedData(data);\n      setStretched(true);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n  const handleClear = () => {\n    setLoadedData(null);\n    setStretched(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100vw\",\n    minHeight: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: stretched ? '90vw' : '500px',\n      transition: \"width 0.3s\",\n      sx: {\n        mt: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Loaded Data\",\n        value: loadedData ? JSON.stringify(loadedData, null, 4) // Indent with 4 spaces for better readability\n        : '',\n        sx: {\n          mt: 0,\n          width: '100%',\n          fontFamily: 'monospace',\n          '& .MuiInputBase-input': {\n            fontFamily: 'monospace',\n            textAlign: 'left',\n            // Align text to left for JSON readability\n            whiteSpace: 'pre' // Preserve indentation\n          }\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        multiline: true,\n        minRows: stretched ? 16 : 6 // Smaller before loading, larger after\n        ,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        sx: {\n          mt: 2\n        },\n        variant: \"contained\",\n        children: \"Load Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        sx: {\n          mt: 1\n        },\n        variant: \"contained\",\n        children: \"Clear Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(DataForm, \"1xDV15ukIp/dQ3Dv/8WS0E37pAQ=\");\n_c = DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["useState","Box","TextField","Button","axios","jsxDEV","_jsxDEV","endpointMapping","DataForm","integrationType","credentials","_s","loadedData","setLoadedData","stretched","setStretched","endpoint","handleLoad","formData","FormData","append","JSON","stringify","response","post","data","e","_e$response","_e$response$data","alert","detail","handleClear","display","justifyContent","alignItems","flexDirection","width","minHeight","children","transition","sx","mt","label","value","fontFamily","textAlign","whiteSpace","InputLabelProps","shrink","multiline","minRows","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","_c","$RefreshReg$"],"sources":["D:/Telegram Desktop/automations_technical_assessment/integrations_technical_assessment/frontend/src/data-form.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n    Box,\n    TextField,\n    Button,\n} from '@mui/material';\nimport axios from 'axios';\n\nconst endpointMapping = {\n    'Notion': 'notion',\n    'Airtable': 'airtable',\n    'HubSpot': 'hubspot',\n};\n\nexport const DataForm = ({ integrationType, credentials }) => {\n    const [loadedData, setLoadedData] = useState(null);\n    const [stretched, setStretched] = useState(false);\n    const endpoint = endpointMapping[integrationType];\n\n    const handleLoad = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('credentials', JSON.stringify(credentials));\n            const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n            const data = response.data;\n            setLoadedData(data);\n            setStretched(true);\n        } catch (e) {\n            alert(e?.response?.data?.detail);\n        }\n    };\n\n    const handleClear = () => {\n        setLoadedData(null);\n        setStretched(false);\n    };\n\n    return (\n        <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100vw' minHeight='100vh'>\n            <Box\n                display='flex'\n                flexDirection='column'\n                width={stretched ? '90vw' : '500px'}\n                transition=\"width 0.3s\"\n                sx={{ mt: 0 }}\n            >\n                <TextField\n                    label=\"Loaded Data\"\n                    value={\n                        loadedData\n                            ? JSON.stringify(loadedData, null, 4) // Indent with 4 spaces for better readability\n                            : ''\n                    }\n                    sx={{\n                        mt: 0,\n                        width: '100%',\n                        fontFamily: 'monospace',\n                        '& .MuiInputBase-input': {\n                            fontFamily: 'monospace',\n                            textAlign: 'left', // Align text to left for JSON readability\n                            whiteSpace: 'pre', // Preserve indentation\n                        },\n                    }}\n                    InputLabelProps={{ shrink: true }}\n                    multiline\n                    minRows={stretched ? 16 : 6} // Smaller before loading, larger after\n                    disabled\n                />\n                <Button\n                    onClick={handleLoad}\n                    sx={{ mt: 2 }}\n                    variant='contained'\n                >\n                    Load Data\n                </Button>\n                <Button\n                    onClick={handleClear}\n                    sx={{ mt: 1 }}\n                    variant='contained'\n                >\n                    Clear Data\n                </Button>\n            </Box>\n        </Box>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}